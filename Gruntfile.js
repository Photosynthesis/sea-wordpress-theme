module.exports = function(grunt) {
    grunt.initConfig({
      site_data: grunt.file.readJSON("website.json"),
  
      babel: {
        options: {
          plugins: ["transform-react-jsx"],
          presets: ["@babel/preset-env", "@babel/preset-react"]
        },
        dist: {
          files: [
            {
              expand: true,
              cwd: "src/react/",
              src: ["**/*.jsx"],
              dest: "build/react/",
              ext: ".js"
            },
            {
              expand: true,
              cwd: "src/js/",
              src: ["**/*.js", "!vendor/**/*.*"],
              dest: "build/react/",
              ext: ".js"
            }
          ]
        }
      },
  
      browserify: {
        dist: {
          files: [
            {
              expand: true,
              cwd: "build/react",
              src: ["*.js"],
              dest: "build/browserified",
              ext: ".js"
            }
          ]
        }
      },
  
      jshint: {
        options: {
          indent: 2,
          eqeqeq: true,
          latedef: false,
          noarg: true,
          undef: true,
          unused: false,
          strict: false,
          // esnext: true,
          node: true,
          esversion: 6,
          reporterOutput: "",
          trailing: true,
          globals: {
            jQuery: true,
            $: true,
            Modernizr: true,
            console: true,
            alert: true,
            tns: true,
            tippy: true,
            Vimeo: true,
            YT: true
          },
          browser: true
        },
  
        all: ["src/js/**/*.*", "!src/js/vendor/**/*.*", "src/react/**/*.*"]
      },
  
      concat: {
        js: {
          src: ["src/js/vendor/**/*.js", "build/browserified/**/*.js"],
          dest: "js/core.js"
        },
        css: {
          src: ["src/css/vendor/**/*.css", "build/css/style.css"],
          dest: "build/concated/style.css",
          options: {
            banner:
              "/**\n" +
              " * Theme Name: <%= site_data.theme_name %>\n" +
              ' * Author: <a href="https://solidarityeconomy.coop/">Solidarity Economy Association</a>\n' +
              " * Author URI: https://solidarityeconomy.coop/\n" +
              " * Version: <%= site_data.version %>\n" +
              " * Description: <%= site_data.description %>\n" +
              " */\n\n",
            footer:
              "/* DO NOT EDIT THIS FILE! */\n" +
              "/* to make changes, create a file called hacks.css and put them in there */\n" +
              "/* DO NOT EDIT THIS FILE! */"
          }
        }
      },
  
      uglify: {
        "js/core.js": "js/core.js"
      },
  
      cssmin: {
        "style.css": "style.css"
      },
  
      sass: {
        dist: {
          files: {
            "build/css/style.css": "src/sass/style.scss",
            "build/concated/editor-style.css": "src/sass/editor.scss"
          },
          options: {
            style: "expanded",
            sourceMap: false,
//            sourceComments: true
          }
        }
      },
  
      autoprefixer: {
        options: {
          browsers: ["> 0.00001%"]
        },
        build: {
          files : [
            {
              src: "build/concated/style.css",
              dest: "style.css"
            },
            {
              src: "build/concated/editor-style.css",
              dest: "editor-style.css"
            }
          ]
        }
      },
  
      clean: {
        build: ["build/**/*.*", "build"]
      },
  
      watch: {
        css: {
          files: ["src/css/**/*.*", "src/sass/**/*.*"],
          tasks: ["sass", "concat:css", "autoprefixer"]
        },
        js: {
          files: ["src/js/**/*.js"],
          tasks: ["jshint", "babel", "browserify", "concat:js"]
        },
        react: {
          files: ["src/react/**/*.jsx"],
          tasks: ["babel", "browserify", "concat:js"]
        }
      }
    });
  
    grunt.loadNpmTasks("grunt-babel");
    grunt.loadNpmTasks("grunt-browserify");
    grunt.loadNpmTasks("grunt-contrib-concat");
    grunt.loadNpmTasks("grunt-contrib-watch");
    grunt.loadNpmTasks("grunt-contrib-sass");
    grunt.loadNpmTasks("grunt-autoprefixer");
    grunt.loadNpmTasks("grunt-contrib-cssmin");
    grunt.loadNpmTasks("grunt-contrib-uglify");
    grunt.loadNpmTasks("grunt-contrib-jshint");
    grunt.loadNpmTasks("grunt-contrib-clean");
  
    grunt.registerTask(
      "build",
      "Minifying stuff after rebuilding ..",
      function() {
        grunt.task.run("sass");
        grunt.task.run("concat:css");
        grunt.task.run("autoprefixer");
        grunt.task.run("jshint");
        grunt.task.run("babel");
        grunt.task.run("browserify");
        grunt.task.run("concat:js");
        grunt.task.run("uglify");
        grunt.task.run("cssmin");
        grunt.task.run("clean");
      }
    );
  
    grunt.registerTask(
      "dev",
      "Check, concat, minify, etc. In short: build the site",
      function() {
        grunt.task.run("sass");
        grunt.task.run("concat:css");
        grunt.task.run("autoprefixer");
        grunt.task.run("jshint");
        grunt.task.run("babel");
        grunt.task.run("browserify");
        grunt.task.run("concat:js");
        //taking out minifying for dev
        // grunt.task.run('uglify');
        // grunt.task.run('cssmin');
      }
    );
  
    grunt.registerTask("default", "LET'S GET TO WORK!", function() {
      grunt.task.run("dev");
      grunt.task.run("watch");
    });
  };
  
